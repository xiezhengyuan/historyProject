package com.hxy.isw.control;

import java.io.ByteArrayOutputStream;
import java.io.InputStream;
import java.util.Date;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.hxy.isw.entity.PayInfoByWX;
import com.hxy.isw.service.AppServiceUser;
import com.hxy.isw.util.ConstantUtil;
import com.hxy.isw.util.JsonUtil;
import com.hxy.isw.util.Sys;

/**
* @author lcc
* @date 2017年7月20日 下午3:11:55
* @describe
*/


@Controller
@RequestMapping("/appServiceUser")
public class AppServiceUserControl {

	@Autowired
	AppServiceUser appServiceUser;
	
	/**
	 * 获取验证码
	 * @param request
	 * @param response
	 * @param session
	 */
	@RequestMapping(method = RequestMethod.POST, value = "/getcode")
	public void getcode(HttpServletRequest request,HttpServletResponse response,HttpSession session){
		String type = request.getParameter("type");
		String mobile = request.getParameter("mobile");
		
		try{
			String json = appServiceUser.getcode(type,mobile);
			JsonUtil.success2client(response, json);
		}catch(Exception e){
			String mess = e.getMessage();
			JsonUtil.success2client(response, "{\"msg\":\"fail\",\"info\":\""+mess+"\"}");
			e.printStackTrace();
		}
	}
	
	 /**
	 * 登录
	 * @param request
	 * @param response
	 * @param session
	 */
	@RequestMapping(method = RequestMethod.POST, value = "/login")
	public void queryemployee(HttpServletRequest request,HttpServletResponse response,HttpSession session){
		try {
			
			String mobile = request.getParameter("mobile");
			String password = request.getParameter("password");
			
			String json = appServiceUser.login(mobile, password);
			JsonUtil.success2client(response, json);
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			String mess = e.getMessage();
			JsonUtil.success2client(response, "{\"msg\":\"fail\",\"info\":\""+mess+"\"}");
			e.printStackTrace();
		}
	}
	
	
	 /**
	 * 注册
	 * @param request
	 * @param response
	 * @param session
	 */
	@RequestMapping(method = RequestMethod.POST, value = "/registe")
	@Transactional(propagation=Propagation.REQUIRED,rollbackFor=Exception.class)
	public void register(HttpServletRequest request,HttpSession session,HttpServletResponse response){
		String mobile = request.getParameter("mobile");
		String password = request.getParameter("password");
		String code = request.getParameter("code");
		String faccountid = request.getParameter("faccountid");//推广业务员id
		String finvateid = request.getParameter("finvateid");//邀请人id（用户）
		try {
			String json = appServiceUser.registe(mobile, password,code,faccountid,finvateid);
			JsonUtil.success2client(response, json);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			String mess = e.getMessage();
			JsonUtil.success2client(response, "{\"msg\":\"fail\",\"info\":\""+mess+"\"}");
			e.printStackTrace();
		}
	}
	
	
	/**
	 * 忘记密码
	 * @param request
	 * @param response
	 * @param session
	 */
    @RequestMapping(method = RequestMethod.POST, value = "/forgotpassword")
	@Transactional(propagation=Propagation.REQUIRED,rollbackFor=Exception.class)
    public void forgotpassword(HttpServletRequest request,HttpSession session,HttpServletResponse response){
    	String mobile = request.getParameter("mobile");
    	String newpassword = request.getParameter("newpassword");
    	String code = request.getParameter("code");
    	try {
    		String json = appServiceUser.forgotpassword(mobile, newpassword,code);
			JsonUtil.success2client(response, json);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			String mess = e.getMessage();
			JsonUtil.success2client(response, "{\"msg\":\"fail\",\"info\":\""+mess+"\"}");
			e.printStackTrace();
		}
    }
    
    
    /**
	 * 近7日收益走势统计图
	 * @param request
	 * @param response
	 * @param session
	 */
	@Transactional(propagation=Propagation.REQUIRED,rollbackFor=Exception.class)
	@RequestMapping(method = RequestMethod.POST, value = "/sevendayprofit")
	public void sevendayprofit(HttpServletRequest request,HttpServletResponse response,HttpSession session){
		String userid = request.getParameter("userid");
		
		try{
			String json = appServiceUser.sevendayprofit(userid);
			JsonUtil.success2client(response, json);
		}catch(Exception e){
			String mess = e.getMessage();
			JsonUtil.success2client(response, "{\"msg\":\"fail\",\"info\":\""+mess+"\"}");
			e.printStackTrace();
		}
	}
	
	
	/**
	 * 我的收益数据
	 * @param request
	 * @param response
	 * @param session
	 */
	@Transactional(propagation=Propagation.REQUIRED,rollbackFor=Exception.class)
	@RequestMapping(method = RequestMethod.POST, value = "/myprofit")
	public void myprofit(HttpServletRequest request,HttpServletResponse response,HttpSession session){
		String userid = request.getParameter("userid");
		
		try{
			String json = appServiceUser.myprofit(userid);
			JsonUtil.success2client(response, json);
		}catch(Exception e){
			String mess = e.getMessage();
			JsonUtil.success2client(response, "{\"msg\":\"fail\",\"info\":\""+mess+"\"}");
			e.printStackTrace();
		}
	}
	
	
	/**
	 * 充值
	 * @param request
	 * @param response
	 * @param session
	 */
	@RequestMapping(method = RequestMethod.POST, value = "/recharge")
	public void recharge(HttpServletRequest request,HttpServletResponse response,HttpSession session){
		String userid = request.getParameter("userid");
		String amount = request.getParameter("amount");
		int paymentway = request.getParameter("paymentway")==null?1:Integer.parseInt(request.getParameter("paymentway"));
		
		try{
			String json = appServiceUser.recharge(userid,amount,paymentway);
			JsonUtil.success2page(response, json);
		}catch(Exception e){
			String mess = e.getMessage();
			JsonUtil.success2page(response, "{\"msg\":\"fail\",\"info\":\""+mess+"\"}");
			e.printStackTrace();
		}
	}
	
	
	//微信支付异步通知
	@RequestMapping(method = RequestMethod.POST, value = "/wxnotify")
	@Transactional(propagation=Propagation.REQUIRED,rollbackFor=Exception.class)
	public void wxnotify(HttpServletRequest request,HttpSession session,HttpServletResponse response) throws Exception{
		Sys.out("===============wx===notifyurl=======================");
		InputStream inStream = request.getInputStream();
        ByteArrayOutputStream outSteam = new ByteArrayOutputStream();
        byte[] buffer = new byte[1024];
        int len = 0;
        while ((len = inStream.read(buffer)) != -1) {
            outSteam.write(buffer, 0, len);
        }
        
        outSteam.close();
        inStream.close();
        String result  = new String(outSteam.toByteArray(),"utf-8");
        Sys.out(result);
        result = result.replace("\n", "");
        Map<String, String> map = ConstantUtil.parse(result);
       /* for(Object keyValue : map.keySet()){
            Sys.out(keyValue+"="+map.get(keyValue));
        }*/
        
        String return_code = map.get("return_code");
        String result_code = map.get("result_code");
        Sys.out("wx..pay..return_code:"+return_code);
        Sys.out("wx..pay..result_code:"+result_code);
        if("SUCCESS".equals(return_code)&&"SUCCESS".equals(result_code)){
        	
        	Sys.out("~~~~~~~~~~wx~~~~~~pay success~~~~~~~~~");
        	
        	PayInfoByWX p = new PayInfoByWX();
             p.setAppid(map.get("appid"));
             p.setAttach(map.get("attach"));
             p.setBanktype(map.get("bank_type"));
             p.setCashfee(Integer.parseInt(map.get("cash_fee")));
             p.setFeetype(map.get("fee_type"));
             p.setIssubscribe(map.get("is_subscribe"));
             p.setMchid(map.get("mch_id"));
             p.setNoncestr(map.get("nonce_str"));
             p.setOpenid(map.get("openid"));
             p.setOuttradeno(map.get("out_trade_no"));
             p.setResultcode(map.get("result_code"));
             p.setReturncode(map.get("return_code"));
             p.setSign(map.get("sign"));
             p.setTime(new Date());
             p.setTimeend(map.get("time_end"));
             p.setTotalfee(Integer.parseInt(map.get("total_fee")));
             p.setTradetype(map.get("trade_type"));
             p.setTransactionid(map.get("transaction_id"));
        	
             boolean flag = appServiceUser.wxnotify(p);
             
             if(flag)
            	 response.getWriter().write(setXML("SUCCESS", ""));
             else
            	 response.getWriter().write(setXML("FAIL", ""));
        }else{
        	response.getWriter().write(setXML("FAIL", ""));
        }
        
	}
	
	public static String setXML(String return_code, String return_msg) {
        return "<xml><return_code><![CDATA[" + return_code
                + "]]></return_code><return_msg><![CDATA[" + return_msg
                + "]]></return_msg></xml>";
	}
}
