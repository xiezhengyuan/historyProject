package com.hxy.isw.control;

import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.io.output.CountingOutputStream;
import org.apache.poi.hssf.record.formula.functions.Value;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.google.gson.Gson;
import com.google.gson.JsonArray;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;
import com.hxy.isw.entity.AccountInfo;
import com.hxy.isw.service.ManageUserService;
import com.hxy.isw.util.ConstantUtil;
import com.hxy.isw.util.JsonUtil;

@Controller
@RequestMapping(value="/manageuserinfo")
public class UserInfoControl {
	
	@Autowired
	ManageUserService manageUserService; 
	
	
	/**
	 * 平台查询用户的信息
	 * @param request
	 * @param response
	 * @param session
	 */
	@RequestMapping(method = RequestMethod.POST, value="/ptqueryuserinfo")
	public void ptqueryuserinfo(HttpServletRequest request,HttpServletResponse response,HttpSession session){
		try {
			int start = request.getParameter("page")==null?1:Integer.parseInt(request.getParameter("page"));
			int limit = request.getParameter("rows")==null?ConstantUtil.LIMIT:Integer.parseInt(request.getParameter("rows"));
			String selecttype = request.getParameter("selecttype");
			String querybyuserinfo = request.getParameter("querybyuserinfo")==null?"":request.getParameter("querybyuserinfo");
			String querybyaccountinfo = request.getParameter("querybyaccountinfo")==null?"":request.getParameter("querybyaccountinfo");
			List<Map<String,Object>> lstMap = new ArrayList<Map<String,Object>>();
			
			int records = manageUserService.ptcountuserinfo(querybyuserinfo, querybyaccountinfo,selecttype);
			int total = ConstantUtil.pages(records, limit);
			if(records > 0 ){
				
				lstMap = manageUserService.ptqueryuserinfo( querybyuserinfo, querybyaccountinfo,selecttype, start, limit);
			}	
			JsonUtil.listToJson(lstMap, records, total, response);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
	
	@RequestMapping(method = RequestMethod.POST, value="/ptquerynewlod")
	public void ptquerynewlod(HttpServletRequest request,HttpServletResponse response,HttpSession session){
		try {
			int olduser=manageUserService.ptoldusernum();
			int todayuser=manageUserService.pttodayusernum();
			JsonObject obj = new JsonObject();
			obj.addProperty("olduser",olduser);
			obj.addProperty("todayuser",todayuser);
			response.setContentType("text/json; charset=UTF-8");
			PrintWriter out = response.getWriter();
			out.println(obj.toString());
			out.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		
	}
	
	
	
	//通过用户id查看详情
	@RequestMapping(method = RequestMethod.POST, value="/queryuserbyid")
	public void queryuserbyid(HttpServletRequest request,HttpServletResponse response,HttpSession session){
		try {
			long userid=Long.parseLong(request.getParameter("userid"));
			Map<String, Object> userinfo=manageUserService.queryuserbyid(userid);
			JsonUtil.mapToJson(userinfo, response);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
    //查看用户邀请的人的信息
	@RequestMapping(method = RequestMethod.POST, value="/queryinviteusers")
	public void queryinviteusers(HttpServletRequest request,HttpServletResponse response,HttpSession session){
		try {
			int start = request.getParameter("page")==null?1:Integer.parseInt(request.getParameter("page"));
			int limit = request.getParameter("rows")==null?ConstantUtil.LIMIT:Integer.parseInt(request.getParameter("rows"));
			long userid=Long.parseLong(request.getParameter("userid"));
			String nameorphone=request.getParameter("nameorphone");
            List<Map<String,Object>> lstMap = new ArrayList<Map<String,Object>>();
			
			int records = manageUserService.queryinviteusersnum(userid, nameorphone);
			int total = ConstantUtil.pages(records, limit);
			if(records > 0 ){
				
				lstMap = manageUserService.queryinviteusers( userid, nameorphone, start, limit);
			}	
			JsonUtil.listToJson(lstMap, records, total, response);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	
	//查看金币消费明细
	@RequestMapping(method = RequestMethod.POST, value="/querygolddetil")
	public void querygolddetil(HttpServletRequest request,HttpServletResponse response,HttpSession session){
		try {
			int start = request.getParameter("page")==null?1:Integer.parseInt(request.getParameter("page"));
			int limit = request.getParameter("rows")==null?ConstantUtil.LIMIT:Integer.parseInt(request.getParameter("rows"));
			String gstarttime=request.getParameter("gstarttime")==null?"":request.getParameter("gstarttime");
			String gendtime=request.getParameter("gendtime")==null?"":request.getParameter("gendtime");
			long userid=Long.parseLong(request.getParameter("userid")) ;
            List<Map<String,Object>> lstMap = new ArrayList<Map<String,Object>>();
			
			int records = manageUserService.querygolddetilnumbyuserid(userid, gstarttime,gendtime);
			int total = ConstantUtil.pages(records, limit);
			if(records > 0 ){
				
				lstMap = manageUserService.querygolddetil( userid, gstarttime,gendtime, start, limit);
			}	
			JsonUtil.listToJson(lstMap, records, total, response);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	//查看资金明细
	@RequestMapping(method = RequestMethod.POST, value="/querycapitaldetil")
	public void querymoneydetil(HttpServletRequest request,HttpServletResponse response,HttpSession session){
		try {
			int start = request.getParameter("page")==null?1:Integer.parseInt(request.getParameter("page"));
			int limit = request.getParameter("rows")==null?ConstantUtil.LIMIT:Integer.parseInt(request.getParameter("rows"));
			String mstarttime=request.getParameter("mstarttime")==null?"":request.getParameter("mstarttime");
			String mendtime=request.getParameter("mendtime")==null?"":request.getParameter("mendtime");
			long userid=Long.parseLong(request.getParameter("userid")) ;
            List<Map<String,Object>> lstMap = new ArrayList<Map<String,Object>>();
			
			int records = manageUserService.querymoneydetilnumbyuserid(userid, mstarttime,mendtime);
			int total = ConstantUtil.pages(records, limit);
			if(records > 0 ){
				
				lstMap = manageUserService.querymoneydetil( userid, mstarttime,mendtime, start, limit);
			}	
			JsonUtil.listToJson(lstMap, records, total, response);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	//删除用户
	@RequestMapping(method = RequestMethod.POST, value="/delectuser")
	public void delectuser(HttpServletRequest request,HttpServletResponse response,HttpSession session){
		try {
			String userid=request.getParameter("id");
			manageUserService.delectuser(Long.parseLong(userid));
			JsonUtil.success2page(response);
		} catch (Exception e) {
			e.getMessage();
			JsonUtil.success2page(response, "{\"op\":\"fail\",\"msg\":\"异常\"}");
			e.printStackTrace();
		}
	}
	
	
	//修改用户金额
	@RequestMapping(method = RequestMethod.POST, value="/updatagolds")
	public void updatagolds(HttpServletRequest request,HttpServletResponse response,HttpSession session){
		try {
			String userid=request.getParameter("userid");
			String golds=request.getParameter("golds");
			String isjia=request.getParameter("isjia");
			double dbgolds=Double.parseDouble(golds);
			manageUserService.updatagolds(Long.parseLong(userid),dbgolds,isjia);
			
			JsonUtil.success2page(response);
		} catch (Exception e) {
			e.getMessage();
			JsonUtil.success2page(response, "{\"op\":\"fail\",\"msg\":\"异常\"}");
			e.printStackTrace();
		}
	}
	
}
